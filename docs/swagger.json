{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/brands": {
            "get": {
                "description": "Get a list of Brand.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Get all Brand.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Brand"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Brand.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Create New Brand.",
                "parameters": [
                    {
                        "description": "the body to create a new Brand",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.brandInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    }
                }
            }
        },
        "/brands/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Brand by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Delete one Brand.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Brand by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Update Brand.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update brand",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.brandInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    }
                }
            }
        },
        "/changepassword": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "change user's password.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Change user's password.",
                "parameters": [
                    {
                        "description": "the body to change password",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ChangePasswordInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logging in to get jwt token to access admin or user api by roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login as as user.",
                "parameters": [
                    {
                        "description": "the body to login a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/phones": {
            "get": {
                "description": "Get a list of Phone.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Get all Phone.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Phone"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Phone.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Create New Phone.",
                "parameters": [
                    {
                        "description": "the body to create a new Phone",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.phoneInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Phone"
                        }
                    }
                }
            }
        },
        "/phones/bybrand/{id}": {
            "get": {
                "description": "Get a list of Phone By Brand id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Get all Phone By Brand id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Phone"
                            }
                        }
                    }
                }
            }
        },
        "/phones/fav": {
            "get": {
                "description": "Get a list of Phone.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Get list Phone order by favourite, by how many hits.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Phone"
                            }
                        }
                    }
                }
            }
        },
        "/phones/search/{keyword}": {
            "get": {
                "description": "Get a list of Phone By Name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Get all Phone By Name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Phone"
                            }
                        }
                    }
                }
            }
        },
        "/phones/{id}": {
            "get": {
                "description": "Get detail of Phone.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Get Detail Phone.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Phone",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Phone"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Phone by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Delete one Phone.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Phone by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Phone"
                ],
                "summary": "Update Phone.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update age rating category",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.phoneInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Phone"
                        }
                    }
                }
            }
        },
        "/pictures": {
            "get": {
                "description": "Get a list of Picture.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Picture"
                ],
                "summary": "Get all Picture.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Picture"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Picture.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Picture"
                ],
                "summary": "Create New Picture.",
                "parameters": [
                    {
                        "description": "the body to create a new Picture",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.pictureInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Picture"
                        }
                    }
                }
            }
        },
        "/pictures/byphone/{id}": {
            "get": {
                "description": "Get a list of By Phone ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Picture"
                ],
                "summary": "Get all Picture By Phone ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Picture"
                            }
                        }
                    }
                }
            }
        },
        "/pictures/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Picture by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Picture"
                ],
                "summary": "Delete one Picture.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Picture id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Picture by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Picture"
                ],
                "summary": "Update Picture.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Picture id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update picture",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.pictureInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Picture"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "registering a user from public access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a user.",
                "parameters": [
                    {
                        "description": "the body to register a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "description": "Get a list of Review.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Get all Review.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Review"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Review.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Create New Review.",
                "parameters": [
                    {
                        "description": "the body to create a new Review",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.reviewInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    }
                }
            }
        },
        "/reviews/byphone/{id}": {
            "get": {
                "description": "Get a list of By Phone ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Get all Review By Phone ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Review"
                            }
                        }
                    }
                }
            }
        },
        "/reviews/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Review by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Delete one Review.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "Get a list of Role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get all Role.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Role"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Create New Role.",
                "parameters": [
                    {
                        "description": "the body to create a new Role",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.roleInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Role by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Delete one Role.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Role by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Update Role.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update role",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.roleInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger: 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ChangePasswordInput": {
            "type": "object",
            "required": [
                "newPassword",
                "oldPassword",
                "username"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.RegisterInput": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.brandInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.phoneInput": {
            "type": "object",
            "properties": {
                "battery_charging": {
                    "type": "string"
                },
                "battery_type": {
                    "type": "string"
                },
                "body_dimensions": {
                    "type": "string"
                },
                "body_sim": {
                    "type": "string"
                },
                "body_weight": {
                    "type": "string"
                },
                "brandID": {
                    "type": "integer"
                },
                "comms_bluetooth": {
                    "type": "string"
                },
                "comms_gps": {
                    "type": "string"
                },
                "comms_infrared": {
                    "type": "string"
                },
                "comms_nfc": {
                    "type": "string"
                },
                "comms_radio": {
                    "type": "string"
                },
                "comms_usb": {
                    "type": "string"
                },
                "comms_wlan": {
                    "type": "string"
                },
                "display_protection": {
                    "type": "string"
                },
                "display_resolution": {
                    "type": "string"
                },
                "display_size": {
                    "type": "string"
                },
                "display_type": {
                    "type": "string"
                },
                "features_sensor": {
                    "type": "string"
                },
                "launch_announce": {
                    "type": "string"
                },
                "launch_status": {
                    "type": "string"
                },
                "maincam_dual": {
                    "type": "string"
                },
                "maincam_features": {
                    "type": "string"
                },
                "maincam_video": {
                    "type": "string"
                },
                "memory_cardslot": {
                    "type": "string"
                },
                "memory_internal": {
                    "type": "string"
                },
                "misc_color": {
                    "type": "string"
                },
                "misc_price": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_technology": {
                    "type": "string"
                },
                "picture_cover": {
                    "type": "string"
                },
                "platform_cpu": {
                    "type": "string"
                },
                "platform_gpu": {
                    "type": "string"
                },
                "platform_os": {
                    "type": "string"
                },
                "selfcam_features": {
                    "type": "string"
                },
                "selfcam_single": {
                    "type": "string"
                },
                "selfcam_video": {
                    "type": "string"
                },
                "sound_jack": {
                    "type": "string"
                },
                "sound_loudspeaker": {
                    "type": "string"
                }
            }
        },
        "controllers.pictureInput": {
            "type": "object",
            "properties": {
                "phoneID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "urlPicture": {
                    "type": "string"
                }
            }
        },
        "controllers.reviewInput": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "phoneID": {
                    "type": "integer"
                },
                "picture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "controllers.roleInput": {
            "type": "object",
            "properties": {
                "can_write": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Brand": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Opinion": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "phoneID": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Phone": {
            "type": "object",
            "properties": {
                "battery_charging": {
                    "type": "string"
                },
                "battery_type": {
                    "type": "string"
                },
                "body_dimensions": {
                    "type": "string"
                },
                "body_sim": {
                    "type": "string"
                },
                "body_weight": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#/definitions/models.Brand"
                },
                "brandID": {
                    "type": "integer"
                },
                "comms_bluetooth": {
                    "type": "string"
                },
                "comms_gps": {
                    "type": "string"
                },
                "comms_infrared": {
                    "type": "string"
                },
                "comms_nfc": {
                    "type": "string"
                },
                "comms_radio": {
                    "type": "string"
                },
                "comms_usb": {
                    "type": "string"
                },
                "comms_wlan": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_protection": {
                    "type": "string"
                },
                "display_resolution": {
                    "type": "string"
                },
                "display_size": {
                    "type": "string"
                },
                "display_type": {
                    "type": "string"
                },
                "features_sensor": {
                    "type": "string"
                },
                "hits": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "launch_announce": {
                    "type": "string"
                },
                "launch_status": {
                    "type": "string"
                },
                "maincam_dual": {
                    "type": "string"
                },
                "maincam_features": {
                    "type": "string"
                },
                "maincam_video": {
                    "type": "string"
                },
                "memory_cardslot": {
                    "type": "string"
                },
                "memory_internal": {
                    "type": "string"
                },
                "misc_color": {
                    "type": "string"
                },
                "misc_price": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_technology": {
                    "type": "string"
                },
                "opinions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Opinion"
                    }
                },
                "picture_cover": {
                    "type": "string"
                },
                "pictures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Picture"
                    }
                },
                "platform_cpu": {
                    "type": "string"
                },
                "platform_gpu": {
                    "type": "string"
                },
                "platform_os": {
                    "type": "string"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Review"
                    }
                },
                "selfcam_features": {
                    "type": "string"
                },
                "selfcam_single": {
                    "type": "string"
                },
                "selfcam_video": {
                    "type": "string"
                },
                "sound_jack": {
                    "type": "string"
                },
                "sound_loudspeaker": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Picture": {
            "type": "object",
            "properties": {
                "UrlPicture": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phoneID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Review": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phoneID": {
                    "type": "integer"
                },
                "picture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "can_write": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}